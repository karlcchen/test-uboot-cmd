#
# test re-booting u-boot/linux, boot from 'usb drive'
#

# === init network 
# === test ping 
setenv test-ping 'ping $serverip'; setenv init-network 'setenv ipaddr 192.168.168.162; setenv serverip 192.168.168.250; run switch_init; run test-ping'

# === extra_params
# for anderson-peak only, add 'cpuidle.off=1'
setenv extra_params 'pci=pcie_bus_safe cpuidle.off=1'; setenv scx_params 'root=LABEL=A rw rootwait'
setenv extra_params 'pci=pcie_bus_safe'; setenv scx_params 'root=LABEL=A rw rootwait'

# === scx_boot_usb
setenv scx_boot_usb 'usb stop;sleep 3;usb start;run switch_init;run scx_boot_params;fatload usb 0 $loadaddr $fitname;if itest $? -eq 0;then bootm $loadaddr;fi'

# === inc_test_loop, note SETEXPR treat number as HexaDecimal 
# === inc_test_loop
# === inc_test_loop_save
setenv init_test_loop 'setenv test_loop 0 ; setenv test_loop_end 1000000; saveenv; echo test_loop=${test_loop}, test_loop_end=${test_loop_end}'
setenv inc_test_loop 'setexpr.l test_loop ${test_loop} + 1'
setenv inc_test_loop_save 'run inc_test_loop; saveenv'

# === system_info 
setenv system_info 'ver; sysinfo; boardinfo get irv; boardinfo get desc'

# === test_info 
setenv test_info 'echo; echo "### test_loop=${test_loop}; test_loop_end=${test_loop_end} ###"; echo; run system_info'

# === test_scx_boot_usb
setenv test1_scx_boot_usb 'echo "Hello Test1_SCX_BOOT_USB..."; run inc_test_loop_save; run test_info; run scx_boot_usb'
setenv test2_scx_boot_usb 'echo "Hello Test2_SCX_BOOT_USB..."; run inc_test_loop_save; run test_info; run switch_init; run test-ping; run scx_boot_usb'

# === test_boot_usb
setenv test1_boot_usb 'echo "TEST1_BOOT_USB..."; run inc_test_loop_save; run test_info; run boot_usb'
setenv test2_boot_usb 'echo "TEST2_BOOT_USB..."; run inc_test_loop_save; run test_info; run switch_init; run test-ping; run boot_usb'

# === bootcmd 
setenv bootcmd 'run test1_scx_boot_usb'
setenv bootcmd 'run test2_scx_boot_usb'
setenv bootcmd 'run test1_boot_usb'
setenv bootcmd 'run test2_boot_usb'

# === usb_read, usb_read_loop 
setenv usb_read 'fatload usb 0 $loadaddr $fitname; setenv test_status $?'; 
setenv usb_read_loop 'setenv test_loop 0; setenv test_loop_end 10000; saveenv; echo "usb read, loop: from test_loop=${test_loop} to ${test_loop_end}..." ;while itest.l ${test_loop} -lt ${test_loop_end} ; do ; run usb_read; if itest ${test_status} -ne 0; then echo "ERROR: Test Failed at loop=${test_loop}! status=${test_status}"; setenv test_loop ${test_loop_end}; fi; run inc_loop ; done'

# === usb_start_read
# === run usb_start_loop
setenv usb_start_read 'usb stop; sleep 3; usb start; fatload usb 0 $loadaddr $fitname; setenv test_status $?'
setenv usb_start_read_loop 'run init_test_loop; echo "usb read2 loop: from loop=${test_loop} to ${test_loop_end}..." ;while itest.l $test_loop -lt ${test_loop_end} ; do ; run usb_start_read; if itest ${test_status} -ne 0; then echo "ERROR: Test Failed at loop=${test_loop}! status=${test_status}"; setenv loop ${loop_end}; fi; run inc_loop ; done'

